name: deploy

on:
  push:
    branches:
      - main

jobs:
  deploy_to_cluster:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Login a DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Paso 3: Build y push de la imagen a DockerHub
      - name: Build and push to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            bry5co/ci-cd:latest
            bry5co/ci-cd:${{ github.sha }}

      # Paso 4: Configuración de kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.2'

      # Paso 5: Crear el archivo kubeconfig desde los archivos en el repositorio
      - name: Create kubeconfig from local files
        run: |
          mkdir -p $HOME/.kube
          cp k8s-secrets/ca.crt $HOME/.kube/ca.crt
          cp k8s-secrets/client.crt $HOME/.kube/client.crt
          cp k8s-secrets/client.key $HOME/.kube/client.key

          # Crear el kubeconfig utilizando las rutas locales
          echo "
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority: /home/runner/.kube/ca.crt
              server: https://172.31.6.223:8443
            name: minikube
          contexts:
          - context:
              cluster: minikube
              user: minikube
            name: minikube
          current-context: minikube
          kind: Config
          users:
          - name: minikube
            user:
              client-certificate: /home/runner/.kube/client.crt
              client-key: /home/runner/.kube/client.key
          " > $HOME/.kube/config
          
  test-connectivity:
    runs-on: ubuntu-latest
    steps:
    - name: Check Kubernetes connectivity
      run: |
        telnet <ip-publica-de-k8s> 8443 || echo "Cannot connect to Kubernetes API"
      # Paso 6: Verificar la configuración de Kubernetes
      - name: Check Kubernetes config
        run: |
          kubectl config view
          kubectl cluster-info

      # Paso 7: Desplegar en Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/my-app-deployment my-container=bry5co/ci-cd:latest
          kubectl rollout restart deployment/my-app-deployment
